[{"/Users/RossiFerrari/Projects/Prove/thunks/src/index.tsx":"1","/Users/RossiFerrari/Projects/Prove/thunks/src/App.tsx":"2","/Users/RossiFerrari/Projects/Prove/thunks/src/store/store.tsx":"3","/Users/RossiFerrari/Projects/Prove/thunks/src/store/selectors.tsx":"4","/Users/RossiFerrari/Projects/Prove/thunks/src/store/middleware.ts":"5","/Users/RossiFerrari/Projects/Prove/thunks/src/axiosInstance.ts":"6","/Users/RossiFerrari/Projects/Prove/thunks/src/api/postApi.ts":"7","/Users/RossiFerrari/Projects/Prove/thunks/src/components/Posts/PostList.tsx":"8","/Users/RossiFerrari/Projects/Prove/thunks/src/components/Users/UserList.tsx":"9","/Users/RossiFerrari/Projects/Prove/thunks/src/components/Users/UserDisplay.tsx":"10","/Users/RossiFerrari/Projects/Prove/thunks/src/components/Posts/PostDisplay.tsx":"11","/Users/RossiFerrari/Projects/Prove/thunks/src/store/slice.tsx":"12"},{"size":324,"mtime":1611043498545,"results":"13","hashOfConfig":"14"},{"size":1348,"mtime":1611308400020,"results":"15","hashOfConfig":"14"},{"size":568,"mtime":1611325335010,"results":"16","hashOfConfig":"14"},{"size":519,"mtime":1611073707332,"results":"17","hashOfConfig":"14"},{"size":1028,"mtime":1611325335009,"results":"18","hashOfConfig":"14"},{"size":151,"mtime":1610986617281,"results":"19","hashOfConfig":"14"},{"size":1397,"mtime":1611325335008,"results":"20","hashOfConfig":"14"},{"size":742,"mtime":1611065563511,"results":"21","hashOfConfig":"14"},{"size":663,"mtime":1611065563511,"results":"22","hashOfConfig":"14"},{"size":357,"mtime":1611065563511,"results":"23","hashOfConfig":"14"},{"size":824,"mtime":1611308400021,"results":"24","hashOfConfig":"14"},{"size":1555,"mtime":1611325335009,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"fq2sga",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/RossiFerrari/Projects/Prove/thunks/src/index.tsx",[],["53","54"],"/Users/RossiFerrari/Projects/Prove/thunks/src/App.tsx",[],"/Users/RossiFerrari/Projects/Prove/thunks/src/store/store.tsx",[],"/Users/RossiFerrari/Projects/Prove/thunks/src/store/selectors.tsx",[],"/Users/RossiFerrari/Projects/Prove/thunks/src/store/middleware.ts",["55"],"import { Middleware } from \"redux\";\nimport { ActionApi, API_ACTION, onSuccessMask } from \"../api/postApi\";\nimport axiosInstance from \"../axiosInstance\";\nimport { ActionMeta } from \"../types\";\nimport { setLoading, setError } from \"./slice\";\n\nexport const apiMiddleware: Middleware = ({ dispatch }) => (next) => async (\n  action: ActionApi\n) => {\n  if (action.type === API_ACTION) {\n    dispatch(setLoading(true));\n    return asyncHandler(action.payload)\n      .then((result) => {\n        dispatch(setLoading(false));\n        const nextAction = onSuccessMask[action.payload.onSuccess];\n        return dispatch(nextAction(result));\n      })\n      .catch((e) => {\n        //   console.log('e', e)\n        dispatch(setError(e.message));\n        dispatch(setLoading(false));\n      });\n  }\n  return next(action);\n};\n\nconst asyncHandler = async (meta: ActionMeta) =>\n  axiosInstance({\n    method: meta.method,\n    url: meta.url,\n    data: meta.body,\n  }).then((response) => response.data);\n","/Users/RossiFerrari/Projects/Prove/thunks/src/axiosInstance.ts",[],"/Users/RossiFerrari/Projects/Prove/thunks/src/api/postApi.ts",["56","57","58"],"/Users/RossiFerrari/Projects/Prove/thunks/src/components/Posts/PostList.tsx",[],"/Users/RossiFerrari/Projects/Prove/thunks/src/components/Users/UserList.tsx",[],"/Users/RossiFerrari/Projects/Prove/thunks/src/components/Users/UserDisplay.tsx",[],"/Users/RossiFerrari/Projects/Prove/thunks/src/components/Posts/PostDisplay.tsx",["59"],"import React, { useCallback } from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { deletePostApi } from \"../../api/postApi\";\nimport { Post } from \"../../types\";\n\nexport type PostProps = PropsFromRedux & {\n  post: Post;\n};\n\nexport const PostDisplay = ({ post, deletePost }: PostProps) => {\n  const handleDelete = useCallback(() => {\n    deletePost(post.id);\n  }, [deletePost, post.id]);\n  \n  return (\n    <div>\n      <h4>{post.title}</h4>\n      <p>{post.body}</p>\n      <button onClick={handleDelete}>delete</button>\n    </div>\n  );\n};\nconst mapStateToProps = (state) => ({});\n\nconst mapDispatchToProps = {\n  deletePost: deletePostApi,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nexport default connector(PostDisplay);\n","/Users/RossiFerrari/Projects/Prove/thunks/src/store/slice.tsx",[],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":null,"fatal":true,"severity":2,"message":"64","line":14,"column":0},{"ruleId":"65","severity":1,"message":"66","line":4,"column":10,"nodeType":"67","messageId":"68","endLine":4,"endColumn":20},{"ruleId":"65","severity":1,"message":"69","line":6,"column":22,"nodeType":"67","messageId":"68","endLine":6,"endColumn":26},{"ruleId":"65","severity":1,"message":"70","line":6,"column":34,"nodeType":"67","messageId":"68","endLine":6,"endColumn":43},{"ruleId":"71","severity":1,"message":"72","line":13,"column":6,"nodeType":"73","endLine":13,"endColumn":16,"suggestions":"74"},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"Parsing error: Merge conflict marker encountered.","@typescript-eslint/no-unused-vars","'deletePost' is defined but never used.","Identifier","unusedVar","'Mode' is defined but never used.","'PostState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback has an unnecessary dependency: 'post.id'. Either exclude it or remove the dependency array.","ArrayExpression",["77"],"no-global-assign","no-unsafe-negation",{"desc":"78","fix":"79"},"Update the dependencies array to be: []",{"range":"80","text":"81"},[381,391],"[]"]